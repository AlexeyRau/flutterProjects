import requests
import base64
import os
from datetime import datetime
from tkinter import Tk, filedialog, messagebox
from getpass import getpass  # –î–ª—è —Å–∫—Ä—ã—Ç–æ–≥–æ –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞

def load_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (—Ç–æ–∫–µ–Ω –≤–≤–æ–¥–∏—Ç—Å—è –≤—Ä—É—á–Ω—É—é)"""
    print("üîê –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ GitHub:")
    token = getpass("GitHub Token (—Å–∫—Ä—ã—Ç –ø—Ä–∏ –≤–≤–æ–¥–µ): ").strip()
    repo_owner = input("–í–∞—à GitHub username: ").strip()
    repo_name = input("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: ").strip()
    csv_path = input("–ü—É—Ç—å –∫ CSV —Ñ–∞–π–ª—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, lectures.csv): ").strip() or "lectures.csv"
    
    return {
        "GITHUB_TOKEN": token,
        "REPO_OWNER": repo_owner,
        "REPO_NAME": repo_name,
        "CSV_PATH": csv_path
    }

def select_md_file():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ .md —Ñ–∞–π–ª–∞"""
    root = Tk()
    root.withdraw()
    root.attributes('-topmost', True)
    return filedialog.askopenfilename(
        title="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –ª–µ–∫—Ü–∏–∏ (.md)",
        filetypes=[("Markdown files", "*.md")]
    )

def create_initial_csv(config):
    """–°–æ–∑–¥–∞—ë—Ç CSV —Ñ–∞–π–ª —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏"""
    url = f"https://api.github.com/repos/{config['REPO_OWNER']}/{config['REPO_NAME']}/contents/{config['CSV_PATH']}"
    headers = {
        "Authorization": f"token {config['GITHUB_TOKEN']}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    response = requests.put(
        url,
        headers=headers,
        json={
            "message": "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ lectures.csv",
            "content": base64.b64encode("–î–∞—Ç–∞,–ù–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫—Ü–∏–∏,–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ª–µ–∫—Ü–∏–∏\n".encode()).decode()
        }
    )
    return response.status_code == 201

def get_current_csv(config):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π CSV –∏–∑ GitHub"""
    response = requests.get(
        f"https://api.github.com/repos/{config['REPO_OWNER']}/{config['REPO_NAME']}/contents/{config['CSV_PATH']}",
        headers={"Authorization": f"token {config['GITHUB_TOKEN']}"}
    )
    return base64.b64decode(response.json()["content"]).decode() if response.status_code == 200 else None

def update_csv_on_github(config, new_content):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç CSV –Ω–∞ GitHub"""
    current_file = requests.get(
        f"https://api.github.com/repos/{config['REPO_OWNER']}/{config['REPO_NAME']}/contents/{config['CSV_PATH']}",
        headers={"Authorization": f"token {config['GITHUB_TOKEN']}"}
    ).json()
    
    response = requests.put(
        f"https://api.github.com/repos/{config['REPO_OWNER']}/{config['REPO_NAME']}/contents/{config['CSV_PATH']}",
        headers={"Authorization": f"token {config['GITHUB_TOKEN']}"},
        json={
            "message": "–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ª–µ–∫—Ü–∏—è",
            "content": base64.b64encode(new_content.encode()).decode(),
            "sha": current_file.get("sha", "")
        }
    )
    return response.status_code == 200

def add_lecture():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    config = load_config()
    
    if not (md_path := select_md_file()):
        messagebox.showerror("–û—à–∏–±–∫–∞", "–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω!")
        return
    
    try:
        date = input("–î–∞—Ç–∞ –ª–µ–∫—Ü–∏–∏ (–ì–ì–ì–ì-–ú–ú-–î–î): ").strip()
        datetime.strptime(date, "%Y-%m-%d")  # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã
        name = input("–ù–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫—Ü–∏–∏: ").strip()
        
        with open(md_path, "r", encoding="utf-8") as f:
            content = f.read().replace('"', '""')
            
        csv_content = get_current_csv(config) or "–î–∞—Ç–∞,–ù–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫—Ü–∏–∏,–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ª–µ–∫—Ü–∏–∏\n"
        
        if update_csv_on_github(config, csv_content + f'"{date}","{name}","{content}"\n'):
            messagebox.showinfo("–£—Å–ø–µ—Ö", "‚úÖ –õ–µ–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å CSV –Ω–∞ GitHub")
            
    except ValueError:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î.")
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª:\n{e}")

if __name__ == "__main__":
    add_lecture()
